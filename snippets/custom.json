{
    /*
        // Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and 
        // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
        // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
        // same ids are connected.
        // Example:
        "Print to console": {
            "prefix": "log",
            "body": [
                "console.log('$1');",
                "$2"
            ],
            "description": "Log output to console"
        }
    */
    "TS discriminated union example": {
        "prefix": "dunion",
        "body": [
            "type Shape =",
            "   { type: \"circle\", radius: 10 } |",
            "   { type: \"rectangle\", height: number, width: number } |",
            "   { type: \"square\", size: number };",
            "",
            "function getArea(shape: Shape): number {",
            "   switch (shape.type) {",
            "       case \"circle\":",
            "           return Math.PI * shape.radius ** 2;",
            "       case \"square\":",
            "           return shape.size ** 2;",
            "       case \"rectangle\":",
            "           return shape.width * shape.height;",
            "   }",
            "}"
        ],
        "description": "Shape discriminated union example"
    }
}